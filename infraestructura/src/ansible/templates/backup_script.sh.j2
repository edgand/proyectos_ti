#!/bin/bash
# Script de respaldo para el sitio web {{ app_name }}

# Variables
BACKUP_DIR="{{ backup_directory }}"
APP_DIR="{{ app_directory }}"
DATE=$(date +%Y-%m-%d_%H-%M-%S)
BACKUP_FILE="${BACKUP_DIR}/{{ app_name }}_${DATE}.tar.gz"
RETENTION_DAYS={{ backup_retention_days }}

# Crear directorio de respaldo si no existe
mkdir -p ${BACKUP_DIR}

# Crear respaldo del sitio web
echo "Creando respaldo del sitio web {{ app_name }}..."
tar -czf ${BACKUP_FILE} -C $(dirname ${APP_DIR}) $(basename ${APP_DIR})

# Verificar si el respaldo se creó correctamente
if [ $? -eq 0 ]; then
    echo "Respaldo creado correctamente: ${BACKUP_FILE}"
    
    # Establecer permisos adecuados
    chmod 600 ${BACKUP_FILE}
    
    # Eliminar respaldos antiguos
    echo "Eliminando respaldos con más de ${RETENTION_DAYS} días..."
    find ${BACKUP_DIR} -name "{{ app_name }}_*.tar.gz" -type f -mtime +${RETENTION_DAYS} -delete
else
    echo "Error al crear el respaldo"
    exit 1
fi

# Respaldo de la base de datos (si es necesario)
{% if backup_database is defined and backup_database %}
DB_BACKUP_FILE="${BACKUP_DIR}/{{ app_name }}_db_${DATE}.sql.gz"
echo "Creando respaldo de la base de datos..."
mysqldump -u{{ db_user }} -p{{ db_password }} {{ db_name }} | gzip > ${DB_BACKUP_FILE}

if [ $? -eq 0 ]; then
    echo "Respaldo de base de datos creado correctamente: ${DB_BACKUP_FILE}"
    chmod 600 ${DB_BACKUP_FILE}
    
    # Eliminar respaldos de base de datos antiguos
    find ${BACKUP_DIR} -name "{{ app_name }}_db_*.sql.gz" -type f -mtime +${RETENTION_DAYS} -delete
else
    echo "Error al crear el respaldo de la base de datos"
fi
{% endif %}

# Enviar notificación por correo
echo "Respaldo del sitio {{ app_name }} completado el $(date)" | mail -s "Respaldo {{ app_name }} completado" {{ admin_email }}

exit 0

